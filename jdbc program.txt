JDBC Example

import java.sql.*;
 
public class JdbcFullExample {
    public static void main(String[] args) {
        Connection con = null;
        Statement stmt = null;
        PreparedStatement pstmt = null;
        ResultSet rs = null;
 
        try {
            // 1. Load JDBC driver (optional for JDBC 4.0+)
            Class.forName("com.mysql.cj.jdbc.Driver");
 
            // 2. Establish connection
            con = DriverManager.getConnection(
                "jdbc:mysql://localhost:3306/testdb", "root", "password");
            System.out.println("Database connected!");
 
            // 3. Create table using Statement
            stmt = con.createStatement();
            String createTable = "CREATE TABLE IF NOT EXISTS employees (id INT PRIMARY KEY, name VARCHAR(50))";
            stmt.executeUpdate(createTable);
            System.out.println("Table created or already exists.");
 
            // 4. Insert data using PreparedStatement
            String insertSQL = "INSERT INTO employees (id, name) VALUES (?, ?)";
            pstmt = con.prepareStatement(insertSQL);
            pstmt.setInt(1, 1);
            pstmt.setString(2, "John");
            pstmt.executeUpdate();
 
            pstmt.setInt(1, 2);
            pstmt.setString(2, "Alice");
            pstmt.executeUpdate();
            System.out.println("Data inserted using PreparedStatement.");
 
            // 5. Fetch data using Statement
            rs = stmt.executeQuery("SELECT * FROM employees");
            System.out.println("Employee Table:");
            while (rs.next()) {
                System.out.println(rs.getInt("id") + " - " + rs.getString("name"));
            }
 
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            // 6. Close resources
            try { if (rs != null) rs.close(); } catch (Exception e) {}
            try { if (stmt != null) stmt.close(); } catch (Exception e) {}
            try { if (pstmt != null) pstmt.close(); } catch (Exception e) {}
            try { if (con != null) con.close(); } catch (Exception e) {}
        }
    }
}



Example: Bank Transaction in Java
This simulates transferring money between two accounts:
import java.sql.*;
 
public class TransactionExample {
    public static void main(String[] args) {
        Connection con = null;
 
        try {
            // 1. Connect to the database
            Class.forName("com.mysql.cj.jdbc.Driver");
            con = DriverManager.getConnection(
                    "jdbc:mysql://localhost:3306/testdb", "root", "password");
 
            // 2. Start transaction
            con.setAutoCommit(false);
 
            // 3. Debit from Account A (id = 1)
            PreparedStatement debit = con.prepareStatement(
                    "UPDATE accounts SET balance = balance - 100 WHERE id = ?");
            debit.setInt(1, 1);
            debit.executeUpdate();
 
            // 4. Credit to Account B (id = 2)
            PreparedStatement credit = con.prepareStatement(
                    "UPDATE accounts SET balance = balance + 100 WHERE id = ?");
            credit.setInt(1, 2);
            credit.executeUpdate();
 
            // 5. Commit transaction
            con.commit();
            System.out.println("Transaction successful!");
 
        } catch (Exception e) {
            try {
                if (con != null) {
                    con.rollback();  // Rollback on error
                    System.out.println("Transaction rolled back due to error.");
                }
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
            e.printStackTrace();
        } finally {
            try {
                if (con != null) {
                    con.setAutoCommit(true);  // Restore auto-commit
                    con.close();
                }
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }
}